{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport fs from 'fs';\nimport path from 'path';\nimport matter from 'gray-matter';\nimport remark from 'remark';\nimport html from 'remark-html';\nconst subpagesDirectory = 'subpages';\nexport function getSortedPostsData() {\n  // Get file names under /posts\n  const fileNames = fs.readdirSync(subpagesDirectory);\n  const allSubpagesData = fileNames.map(fileName => {\n    // Remove \".md\" from file name to get id\n    const id = fileName.replace('.md', '');\n    const markdownWithMetaData = fs.readFileSync(path.join(subpagesDirectory, id + \".md\"));\n    const parsedMarkdown = matter(markdownWithMetaData); // Combine the data with the id\n\n    return _objectSpread({\n      id\n    }, parsedMarkdown.data);\n  }); // Sort posts by date\n\n  const sortedSubpages = allSubpagesData.sort((a, b) => {\n    if (a.priority > b.priority) {\n      return 1;\n    } else {\n      return -1;\n    }\n  });\n  return sortedSubpages.map(sortedSubpage => sortedSubpage.id);\n}","map":null,"metadata":{},"sourceType":"module"}