{"ast":null,"code":"var _jsxFileName = \"/home/james/Documents/programs/james168ma.github.io/pages/subpages/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n//import React from \"react\";\nimport Head from 'next/head';\nimport Layout from '../../components/layout';\nimport fs from 'fs';\nimport path from 'path';\nimport matter from 'gray-matter';\nimport remark from 'remark';\nimport html from 'remark-html';\nexport default function SubPage({\n  contentHtml,\n  data\n}) {\n  return __jsx(Layout, {\n    home: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, data.title)), __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: contentHtml\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }));\n}\nexport async function getStaticPaths() {\n  const files = fs.readdirSync('subpages');\n  const paths = files.map(filename => ({\n    params: {\n      id: filename.replace(\".md\", \"\")\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params: {\n    id\n  }\n}) {\n  const markdownWithMetaData = fs.readFileSync(path.join('subpages', id + \".md\"));\n  const parsedMarkdown = matter(markdownWithMetaData);\n  const processedContent = await remark().use(html).process(parsedMarkdown.content);\n  const contentHtml = processedContent.toString();\n  return {\n    props: {\n      contentHtml,\n      data: parsedMarkdown.data\n    }\n  };\n}","map":{"version":3,"sources":["/home/james/Documents/programs/james168ma.github.io/pages/subpages/[id].js"],"names":["Head","Layout","fs","path","matter","remark","html","SubPage","contentHtml","data","title","__html","getStaticPaths","files","readdirSync","paths","map","filename","params","id","replace","fallback","getStaticProps","markdownWithMetaData","readFileSync","join","parsedMarkdown","processedContent","use","process","content","toString","props"],"mappings":";;;AAAA;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAjB,EAAwC;AACrD,SACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,IAAI,CAACC,KAAb,CADF,CADF,EAIE;AAAK,IAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAEH;AAAV,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD;AAED,OAAO,eAAeI,cAAf,GAAgC;AAErC,QAAMC,KAAK,GAAGX,EAAE,CAACY,WAAH,CAAe,UAAf,CAAd;AAEA,QAAMC,KAAK,GAAGF,KAAK,CAACG,GAAN,CAAUC,QAAQ,KAAK;AACnCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,EAAE,EAAEF,QAAQ,CAACG,OAAT,CAAiB,KAAjB,EAAwB,EAAxB;AADE;AAD2B,GAAL,CAAlB,CAAd;AAMA,SAAO;AACLL,IAAAA,KADK;AAELM,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID;AAED,OAAO,eAAeC,cAAf,CAA8B;AAACJ,EAAAA,MAAM,EAAE;AAACC,IAAAA;AAAD;AAAT,CAA9B,EAA8C;AAEnD,QAAMI,oBAAoB,GAAGrB,EAAE,CAACsB,YAAH,CAAgBrB,IAAI,CAACsB,IAAL,CAAU,UAAV,EAAsBN,EAAE,GAAG,KAA3B,CAAhB,CAA7B;AAEA,QAAMO,cAAc,GAAGtB,MAAM,CAACmB,oBAAD,CAA7B;AAEA,QAAMI,gBAAgB,GAAG,MAAMtB,MAAM,GAClCuB,GAD4B,CACxBtB,IADwB,EAE5BuB,OAF4B,CAEpBH,cAAc,CAACI,OAFK,CAA/B;AAGA,QAAMtB,WAAW,GAAGmB,gBAAgB,CAACI,QAAjB,EAApB;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLxB,MAAAA,WADK;AAELC,MAAAA,IAAI,EAAEiB,cAAc,CAACjB;AAFhB;AADF,GAAP;AAMD","sourcesContent":["//import React from \"react\";\nimport Head from 'next/head'\nimport Layout from '../../components/layout'\nimport fs from 'fs';\nimport path from 'path';\nimport matter from 'gray-matter'\nimport remark from 'remark'\nimport html from 'remark-html'\n\nexport default function SubPage({ contentHtml, data }) {\n  return (\n    <Layout home={false}>\n      <Head>\n        <title>{data.title}</title>\n      </Head>\n      <div dangerouslySetInnerHTML={{ __html: contentHtml }} />\n    </Layout>\n  )\n}\n\nexport async function getStaticPaths() {\n\n  const files = fs.readdirSync('subpages')\n\n  const paths = files.map(filename => ({\n    params: {\n      id: filename.replace(\".md\", \"\")\n    }\n  }))\n\n  return {\n    paths,\n    fallback: false\n  }\n}\n\nexport async function getStaticProps({params: {id}}) {\n\n  const markdownWithMetaData = fs.readFileSync(path.join('subpages', id + \".md\"))\n\n  const parsedMarkdown = matter(markdownWithMetaData)\n\n  const processedContent = await remark()\n    .use(html)\n    .process(parsedMarkdown.content)\n  const contentHtml = processedContent.toString()\n\n  return {\n    props: {\n      contentHtml,\n      data: parsedMarkdown.data\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}